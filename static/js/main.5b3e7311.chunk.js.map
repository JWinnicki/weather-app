{"version":3,"sources":["components/DetailsInformationContainer/DetailsInformationContainer.module.scss","components/SearchBar/SearchBar.module.scss","components/ForecastContainer/ForecastContainer.module.scss","components/TitleControls/TitleControls.module.scss","components/Toggler/Toggler.module.scss","components/GeneralInformationContainer/GeneralInformationContainer.module.scss","components/ErrorWrapper/ErrorWrapper.module.scss","assets/menuArrow.svg","components/WeatherDescription/WeatherDescription.module.scss","containers/Main/Main.module.scss","components/SearchInput/SearchInput.module.scss","components/SearchButton/SearchButton.module.scss","components/SVGBackground/SVGBackground.module.scss","components/Spinner/Spinner.module.scss","assets/magnifier.svg","components/MenuButton/MenuButton.module.scss","assets/sun.svg","assets/clouds.svg","assets/cloudy-day.svg","assets/fog.svg","assets/rainy.svg","assets/snow.svg","assets/thunder.svg","assets/windArrow.svg","assets/exclamation-mark.svg","containers/App/App.module.scss","serviceWorker.js","components/SearchInput/SearchInput.js","components/SearchButton/SearchButton.js","axios-weather.js","store/actions/forecast.js","store/actions/actionTypes.js","components/SVGBackground/SVGBackground.js","components/Spinner/Spinner.js","components/SearchBar/SearchBar.js","api-key.js","components/MenuButton/MenuButton.js","components/AnimatedTitle/AnimatedTitle.js","components/TitleControls/TitleControls.js","components/Toggler/Toggler.js","components/ForecastIconContainer/ForecastIconContainer.js","components/GeneralInformationContainer/GeneralInformationContainer.js","components/DetailsInformationContainer/DetailsInformationContainer.js","components/AnimatedDescription/AnimatedDescription.js","components/WeatherDescription/WeatherDescription.js","components/ErrorWrapper/ErrorWrapper.js","components/ForecastContainer/ForecastContainer.js","containers/Main/Main.js","containers/App/App.js","store/reducers/forecastReducer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","SearchInput","props","className","styles","SearchButton","children","text","disabled","instance","axios","create","baseURL","searchStart","city","type","searchFail","errorMsg","SVGBackground","icon","rotate","style","backgroundImage","transform","Spinner","loader","connect","isTouched","isLoading","latestForecast","dispatch","onSubmitHandler","a","get","response","forecast","data","undefined","message","console","log","search","useState","setText","shouldAnimationTrigger","setShouldAnimationTrigger","useEffect","setTimeout","SearchBarTouched","SearchBarNoAnimation","SearchBar","SearchBarInputContainer","value","onChange","e","target","placeholder","SearchBarButtonContainer","onClick","MenuButton","AnimatedTitle","styled","h1","animationRange","keyframes","TitleControls","decreaseCounter","increaseCounter","name","shouldAnimate","setShouldAnimate","setAnimationRange","headerContainer","useRef","headerText","current","offsetWidth","range","checkIfFit","borderTopLeftRadius","menuIcon","borderTopRightRadius","TitleControlsHeader","ref","TitleControlsHeaderText","Toggler","options","currentValue","click","map","el","key","TogglerItemButtonActive","TogglerItemButton","ForecastIconContainer","code","setIcon","newCode","Number","slice","sunIcon","sunWithCloudsIcon","cloudsIcon","thunderIcon","rainIcon","snowIcon","fogIcon","GeneralInformationContainer","iconCode","temperature","GeneralContainer","GeneralContainerIcon","GeneralContainerText","Math","ceil","DetailsInformationContainer","pressure","humidity","windSpeed","windDirection","DetailsContainerList","DetailsContainerListItem","DetailsContainerListItemText","DetailsContainerListItemIcon","windIcon","AnimatedDescription","h2","WeatherDescription","description","descriptionContainer","descriptionText","WeatherDescriptionText","ErrorWrapper","ErrorWrapperIcon","ErrorWrapperText","ForecastContainer","forecastArr","mainContainer","index","setIndex","view","setView","prev","length","weather","ForecastContainerContent","ForecastContainerContentToggler","main","temp","wind","speed","deg","historyForecats","Main","App","initialState","error","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","currentForecast","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5b3e7311.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DetailsContainerList\":\"DetailsInformationContainer_DetailsContainerList__1ZmRa\",\"DetailsContainerListItem\":\"DetailsInformationContainer_DetailsContainerListItem__1p2Gu\",\"DetailsContainerListItemText\":\"DetailsInformationContainer_DetailsContainerListItemText__1oIbO\",\"DetailsContainerListItemIcon\":\"DetailsInformationContainer_DetailsContainerListItemIcon__TSgyc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__JfmUx\",\"SearchBarTouched\":\"SearchBar_SearchBarTouched__1KMze\",\"SearchBarNoAnimation\":\"SearchBar_SearchBarNoAnimation__1UK_U\",\"SearchBarInputContainer\":\"SearchBar_SearchBarInputContainer__3Uyz5\",\"SearchBarButtonContainer\":\"SearchBar_SearchBarButtonContainer__Vg1mg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ForecastContainer\":\"ForecastContainer_ForecastContainer__m0c10\",\"slideIn\":\"ForecastContainer_slideIn__2Wl5Z\",\"ForecastContainerContent\":\"ForecastContainer_ForecastContainerContent__3sAk9\",\"ForecastContainerContentToggler\":\"ForecastContainer_ForecastContainerContentToggler__rPo6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleControls\":\"TitleControls_TitleControls__1DAlX\",\"TitleControlsHeader\":\"TitleControls_TitleControlsHeader__LtoJH\",\"TitleControlsHeaderText\":\"TitleControls_TitleControlsHeaderText__3Qk0t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toggler\":\"Toggler_Toggler__1F6N3\",\"TogglerItem\":\"Toggler_TogglerItem__2KjUB\",\"TogglerItemButton\":\"Toggler_TogglerItemButton__1UCPw\",\"TogglerItemButtonActive\":\"Toggler_TogglerItemButtonActive__246Ir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GeneralContainer\":\"GeneralInformationContainer_GeneralContainer__LSiXA\",\"GeneralContainerIcon\":\"GeneralInformationContainer_GeneralContainerIcon__1qka_\",\"GeneralContainerText\":\"GeneralInformationContainer_GeneralContainerText__36Klr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorWrapper\":\"ErrorWrapper_ErrorWrapper__3LmDE\",\"ErrorWrapperIcon\":\"ErrorWrapper_ErrorWrapperIcon__3wLl9\",\"ErrorWrapperText\":\"ErrorWrapper_ErrorWrapperText__12wI5\"};","module.exports = __webpack_public_path__ + \"static/media/menuArrow.3fc89807.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherDescription\":\"WeatherDescription_WeatherDescription__2VYQH\",\"WeatherDescriptionText\":\"WeatherDescription_WeatherDescriptionText__1T3Np\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__36FeQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchInput\":\"SearchInput_SearchInput__1s1gy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchButton\":\"SearchButton_SearchButton__3-0J9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SVGBackground\":\"SVGBackground_SVGBackground__VYfSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__3gXNA\",\"load3\":\"Spinner_load3__o2Lbi\"};","module.exports = __webpack_public_path__ + \"static/media/magnifier.bd127561.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuButton\":\"MenuButton_MenuButton__2GFNN\"};","module.exports = __webpack_public_path__ + \"static/media/sun.a84a2825.svg\";","module.exports = __webpack_public_path__ + \"static/media/clouds.36a2dca2.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-day.3340ef46.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.87591d46.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy.9fa69dc8.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.4672532e.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.a2b71ce8.svg\";","module.exports = __webpack_public_path__ + \"static/media/windArrow.958a82bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/exclamation-mark.fbd33943.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3D010\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nimport styles from './SearchInput.module.scss';\r\n\r\nconst SearchInput = props => {\r\n\r\n    return (\r\n        <input className={styles.SearchInput} {...props}/>\r\n    );\r\n}\r\n\r\nexport default SearchInput;","import React from 'react';\r\n\r\nimport styles from './SearchButton.module.scss';\r\n\r\nconst SearchButton = ({children, text, ...props}) => {\r\n\r\n    return (\r\n        <button className={styles.SearchButton} {...props} disabled={text === '' ? true : false}>\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default SearchButton;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://api.openweathermap.org/data/2.5/`\r\n});\r\n\r\nexport default instance;","import axios from '../../axios-weather';\r\nimport key from '../../api-key';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const searchStart = city => {\r\n    return {\r\n        type: actionTypes.SEARCH_START,\r\n        city: city\r\n    }\r\n}\r\n\r\nexport const searchFail = errorMsg => {\r\n    return {\r\n        type: actionTypes.SEARCH_FAIL,\r\n        errorMsg: errorMsg\r\n    }\r\n}\r\n\r\nexport const searchSuccess = forecast => {\r\n    return {\r\n        type: actionTypes.SEARCH_SUCCESS,\r\n        forecast: forecast\r\n    }\r\n}\r\n\r\nexport const search = city => {\r\n    return async dispatch => {\r\n        dispatch(searchStart(city));\r\n        try {\r\n            const response = await axios.get(`weather?q=${city}&appid=${key}&units=metric`);\r\n            dispatch(searchSuccess(response.data));\r\n        } catch(error) {\r\n            if(error.response === undefined) {\r\n                dispatch(searchFail(''));\r\n            } else {\r\n                dispatch(searchFail(error.response.data.message));\r\n                console.log(error.response.data.message);\r\n            }\r\n        }\r\n    }\r\n}","export const SEARCH_START = 'SEARCH_START';\r\nexport const SEARCH_FAIL = 'SEARCH_FAIL';\r\nexport const SEARCH_SUCCESS = 'SEARCH_SUCCESS';","import React from 'react';\r\n\r\nimport styles from './SVGBackground.module.scss';\r\n\r\nconst SVGBackground = ({icon, rotate}) => {\r\n    const style = {\r\n        backgroundImage: `url(${icon})`,\r\n        transform: `rotate(${rotate ? rotate : 0}deg)`\r\n    }\r\n    return (\r\n        <div \r\n            className={styles.SVGBackground}\r\n            style={style}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SVGBackground;","import React from 'react';\r\n\r\nimport styles from './Spinner.module.scss';\r\n\r\nconst Spinner = () => (\r\n    <div className={styles.loader}></div>\r\n);\r\n\r\nexport default Spinner;","import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport styles from './SearchBar.module.scss';\r\nimport SearchInput from '../SearchInput/SearchInput';\r\nimport SearchButton from '../SearchButton/SearchButton';\r\nimport {search} from '../../store/actions/forecast';\r\nimport SVGBackground from '../SVGBackground/SVGBackground'\r\nimport Spinner from '../Spinner/Spinner';\r\nimport icon from '../../assets/magnifier.svg';\r\n\r\nconst SearchBar = ({onSubmitHandler, isTouched, isLoading, latestForecast}) => {\r\n    const [text, setText] = useState('');\r\n    const [shouldAnimationTrigger, setShouldAnimationTrigger] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setText('');\r\n    }, [latestForecast])\r\n\r\n    useEffect(() => {\r\n        if(isTouched) {\r\n            setTimeout(() => {\r\n                setShouldAnimationTrigger(false);\r\n            }, 1500);\r\n        }\r\n\r\n        return () => {};\r\n    }, [isTouched])\r\n\r\n    const selectClassName = () => {\r\n        if(!isTouched) {\r\n            return styles.SearchBar;\r\n        } else if(isTouched && shouldAnimationTrigger) {\r\n            return styles.SearchBarTouched;\r\n        } else {\r\n            return styles.SearchBarNoAnimation; \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={selectClassName()}>\r\n            <div className={styles.SearchBarInputContainer}>\r\n                <SearchInput\r\n                    type='text'\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    placeholder='City name'\r\n                />\r\n            </div>\r\n            <div className={styles.SearchBarButtonContainer}>\r\n                <SearchButton \r\n                    type='button' \r\n                    onClick={() => onSubmitHandler(text)}\r\n                    text={text}\r\n                >\r\n                    {isLoading ? <Spinner /> : <SVGBackground icon={icon} />}\r\n                </SearchButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({isTouched, isLoading, latestForecast}) => {\r\n    return {\r\n        isTouched: isTouched,\r\n        isLoading: isLoading,\r\n        latestForecast: latestForecast\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitHandler: city => dispatch(search(city))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);","const key = '7b5235f2e02c59f21438436a714ef456';\r\nexport default key;","import React from 'react';\r\n\r\nimport styles from './MenuButton.module.scss';\r\n\r\nconst MenuButton = ({children, ...props}) => {\r\n\r\n    return (\r\n        <button className={styles.MenuButton} {...props}>\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default MenuButton;","import styled, {keyframes} from 'styled-components';\r\n\r\nconst animation = ({animationRange}) => {\r\n    return keyframes`\r\n        0% {\r\n            transform: translateX(${animationRange});\r\n        }\r\n\r\n        50% {\r\n            transform: translateX(-${animationRange});\r\n        }\r\n\r\n        100% {\r\n            transform: translateX(${animationRange});\r\n        }\r\n    `\r\n}\r\n\r\nconst AnimatedTitle = styled.h1`\r\n    white-space: nowrap;\r\n    position: absolute;\r\n    transform: translateX(${props => props.animationRange});\r\n\r\n    animation: ${animation} 4s infinite linear;\r\n`;\r\n\r\nexport default AnimatedTitle;","import React, {useState, useEffect, useRef} from 'react';\r\n\r\nimport styles from './TitleControls.module.scss';\r\nimport SVGBackground from '../SVGBackground/SVGBackground';\r\nimport MenuButton from '../MenuButton/MenuButton';\r\nimport menuIcon from '../../assets/menuArrow.svg';\r\nimport AnimatedTitle from '../AnimatedTitle/AnimatedTitle';\r\n\r\nconst TitleControls = ({decreaseCounter, increaseCounter, name}) => {\r\n\r\n    const [shouldAnimate, setShouldAnimate] = useState(false);\r\n    const [animationRange, setAnimationRange] = useState(0);\r\n    const headerContainer = useRef(null);\r\n    const headerText = useRef(null);\r\n\r\n    const checkIfFit = () => {\r\n        setShouldAnimate(false);\r\n        if(headerContainer.current && headerText.current && headerContainer.current.offsetWidth < headerText.current.offsetWidth) {\r\n            const range = (headerText.current.offsetWidth - headerContainer.current.offsetWidth + 10) / 2;\r\n            setAnimationRange(range);\r\n            setShouldAnimate(true);\r\n        } else {\r\n            setAnimationRange(0);\r\n            setShouldAnimate(false);\r\n        }\r\n    }\r\n    \r\n    const renderTitle = () => {\r\n        if(shouldAnimate) {\r\n            return <AnimatedTitle ref={headerText} animationRange={`${animationRange}px`}>{name}</AnimatedTitle>\r\n        } else {\r\n            return <h1 className={styles.TitleControlsHeaderText} ref={headerText}>{name}</h1>\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkIfFit();\r\n        return () => {};\r\n    }, [name]); //Dopisac warunek zeby sie odswiezalo przy zmianie rozdzielczosci\r\n\r\n    const increaseHandler = () => {\r\n        increaseCounter();\r\n    }\r\n\r\n    const decreaseHandler = () => {\r\n        decreaseCounter();\r\n    }\r\n\r\n    return (         \r\n        <div className={styles.TitleControls}>\r\n            <MenuButton onClick={decreaseHandler} style={{borderTopLeftRadius: '10px'}}>\r\n                <SVGBackground icon={menuIcon} rotate='90'/>\r\n            </MenuButton>\r\n            <MenuButton onClick={increaseHandler} style={{borderTopRightRadius: '10px'}}>\r\n                <SVGBackground icon={menuIcon} rotate='270'/>\r\n            </MenuButton>\r\n            <div className={styles.TitleControlsHeader} ref={headerContainer}>\r\n                {renderTitle()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TitleControls;\r\n\r\n","import React from 'react';\r\n\r\nimport styles from './Toggler.module.scss';\r\n\r\nconst Toggler = ({options, currentValue, click}) => {\r\n\r\n    const renderOptions = () => {\r\n        return options.map(el => {\r\n            return (\r\n                <button key={el} onClick={() => click(el)} className={currentValue === el ? styles.TogglerItemButtonActive : styles.TogglerItemButton}>{el}</button>\r\n            );\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Toggler}>\r\n            {renderOptions()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Toggler;","import React, {useState, useEffect} from 'react';\r\n\r\nimport SVGBackground from '../SVGBackground/SVGBackground';\r\nimport sunIcon from '../../assets/sun.svg';\r\nimport cloudsIcon from '../../assets/clouds.svg';\r\nimport sunWithCloudsIcon from '../../assets/cloudy-day.svg';\r\nimport fogIcon from '../../assets/fog.svg';\r\nimport rainIcon from '../../assets/rainy.svg';\r\nimport snowIcon from '../../assets/snow.svg';\r\nimport thunderIcon from '../../assets/thunder.svg';\r\n\r\nconst ForecastIconContainer = ({code}) => {\r\n\r\n    const [icon, setIcon] = useState(null);\r\n    console.log(code)\r\n\r\n    useEffect(() => {\r\n        if(code){\r\n            const newCode = Number(code.slice(0,2));\r\n            if(newCode <= 4) {\r\n                if(newCode === 1) {\r\n                    setIcon(sunIcon);\r\n                } else if(newCode === 2) {\r\n                    setIcon(sunWithCloudsIcon);\r\n                } else {\r\n                    setIcon(cloudsIcon)\r\n                }\r\n            } else if(newCode >= 9 && newCode <= 11) {\r\n                if(newCode === 11) {\r\n                    setIcon(thunderIcon);\r\n                } else {\r\n                    setIcon(rainIcon);\r\n                }\r\n            } else {\r\n                if(newCode === 13) {\r\n                    setIcon(snowIcon);\r\n                } else {\r\n                    setIcon(fogIcon);\r\n                }\r\n            }\r\n        }\r\n    }, [code])\r\n    \r\n    return (\r\n        <SVGBackground icon={icon}/>\r\n    );\r\n}\r\n\r\nexport default ForecastIconContainer;","import React from 'react';\r\n\r\nimport styles from './GeneralInformationContainer.module.scss';\r\nimport ForecastIconContainer from '../ForecastIconContainer/ForecastIconContainer';\r\n\r\nconst GeneralInformationContainer = ({iconCode, temperature}) => {\r\n    return (\r\n        <div className={styles.GeneralContainer}>\r\n            <div className={styles.GeneralContainerIcon}>\r\n                <ForecastIconContainer \r\n                    code={iconCode}\r\n                />\r\n            </div>\r\n            <p className={styles.GeneralContainerText}>{Math.ceil(temperature)} °C</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GeneralInformationContainer;","import React from 'react';\r\n\r\nimport styles from './DetailsInformationContainer.module.scss';\r\nimport windIcon from '../../assets/windArrow.svg';\r\nimport SVGBackground from '../SVGBackground/SVGBackground';\r\n\r\n\r\nconst DetailsInformationContainer = ({pressure, humidity, windSpeed, windDirection}) => (\r\n    <ul className={styles.DetailsContainerList}>\r\n        <li className={styles.DetailsContainerListItem}>\r\n            <p className={styles.DetailsContainerListItemText}>Pressure: {pressure} hPa</p>\r\n        </li>\r\n        <li className={styles.DetailsContainerListItem}>\r\n            <p className={styles.DetailsContainerListItemText}>Humidity: {humidity} %</p>\r\n        </li>\r\n        <li className={styles.DetailsContainerListItem}>\r\n            <p className={styles.DetailsContainerListItemText}>Wind Speed: {windSpeed} m/s</p>\r\n        </li>\r\n        <li className={styles.DetailsContainerListItem}>\r\n            <p className={styles.DetailsContainerListItemText}>Wind Direction:</p>\r\n            <div className={styles.DetailsContainerListItemIcon}>\r\n                <SVGBackground icon={windIcon} rotate={windDirection}/>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n);\r\n\r\nexport default DetailsInformationContainer;","import styled, {keyframes} from 'styled-components';\r\n\r\nconst animation = ({animationRange}) => {\r\n    return keyframes`\r\n        0% {\r\n            transform: translateX(${animationRange});\r\n        }\r\n\r\n        50% {\r\n            transform: translateX(-${animationRange});\r\n        }\r\n\r\n        100% {\r\n            transform: translateX(${animationRange});\r\n        }\r\n    `\r\n}\r\n\r\nconst AnimatedDescription = styled.h2`\r\n    white-space: nowrap;\r\n    position: absolute;\r\n    transform: translateX(${props => props.animationRange});\r\n    font-size: 1.8rem;\r\n\r\n    animation: ${animation} 4s infinite linear;\r\n`;\r\n\r\nexport default AnimatedDescription;","import React, {useRef, useEffect, useState} from 'react';\r\n\r\nimport styles from './WeatherDescription.module.scss';\r\nimport AnimatedDescription from '../AnimatedDescription/AnimatedDescription';\r\n\r\nconst WeatherDescription = ({description}) => {\r\n    const [shouldAnimate, setShouldAnimate] = useState(false);\r\n    const [animationRange, setAnimationRange] = useState(0);\r\n    const descriptionContainer = useRef(null);\r\n    const descriptionText = useRef(null);\r\n\r\n    const checkIfFit = () => {\r\n        setShouldAnimate(false);\r\n        if(descriptionContainer.current && descriptionText.current && descriptionContainer.current.offsetWidth < descriptionText.current.offsetWidth) {\r\n            const range = (descriptionText.current.offsetWidth - descriptionContainer.current.offsetWidth + 10) / 2;\r\n            setAnimationRange(range);\r\n            setShouldAnimate(true);\r\n        } else {\r\n            setAnimationRange(0);\r\n            setShouldAnimate(false);\r\n        }\r\n    }\r\n\r\n    const renderDescription = () => {\r\n        if(shouldAnimate) {\r\n            return <AnimatedDescription ref={descriptionText} animationRange={`${animationRange}px`}>{description}</AnimatedDescription>\r\n        } else {\r\n            return <h2 ref={descriptionText} className={styles.WeatherDescriptionText}>{description}</h2>\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkIfFit();\r\n        return () => {};\r\n    }, [description]);\r\n\r\n    return(\r\n        <div className={styles.WeatherDescription} ref={descriptionContainer}>\r\n            {renderDescription()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeatherDescription;","import React from 'react';\r\n\r\nimport styles from './ErrorWrapper.module.scss';\r\nimport SVGBackground from '../SVGBackground/SVGBackground';\r\nimport icon from '../../assets/exclamation-mark.svg'\r\nconst ErrorWrapper = ({children}) => {\r\n    return (\r\n        <div className={styles.ErrorWrapper}>\r\n            <div className={styles.ErrorWrapperIcon}>\r\n                <SVGBackground icon={icon}/>\r\n            </div>\r\n            <p className={styles.ErrorWrapperText}>{children}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorWrapper;","import React, {useState, useEffect} from 'react';\r\n\r\nimport styles from './ForecastContainer.module.scss';\r\nimport TitleControls from '../TitleControls/TitleControls';\r\nimport Toggler from '../Toggler/Toggler';\r\nimport GeneralInformationContainer from '../GeneralInformationContainer/GeneralInformationContainer';\r\nimport DetailsInformationContainer from '../DetailsInformationContainer/DetailsInformationContainer';\r\nimport WeatherDescription from '../WeatherDescription/WeatherDescription';\r\nimport ErrorWrapper from '../ErrorWrapper/ErrorWrapper';\r\n\r\nconst ForecastContainer = ({forecastArr, latestForecast, mainContainer, errorMsg}) => {\r\n\r\n    const [index, setIndex] = useState(0);\r\n    const [view, setView] = useState('General');\r\n    //console.log(mainContainer.current.offsetWidth);\r\n\r\n    useEffect(() => {\r\n        setIndex(0);\r\n    }, [latestForecast]);\r\n\r\n    const increaseCounter = () => {\r\n        if(index > 0) {\r\n            setIndex(prev => prev - 1)\r\n        }\r\n    }\r\n\r\n    const decreaseCounter = () => {\r\n        if(index < forecastArr.length - 1) {\r\n            setIndex(prev => prev + 1)\r\n        }\r\n    }\r\n\r\n    const renderContent = () => {\r\n        if(view === 'General') {\r\n            return (\r\n                <GeneralInformationContainer\r\n                    iconCode={forecastArr[index].weather[0].icon}\r\n                    temperature={forecastArr[index].main.temp}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <DetailsInformationContainer\r\n                    pressure={forecastArr[index].main.pressure}\r\n                    humidity={forecastArr[index].main.humidity}\r\n                    windSpeed={forecastArr[index].wind.speed}\r\n                    windDirection={forecastArr[index].wind.deg}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    const renderCard = () => {\r\n        if(errorMsg) {\r\n            return <ErrorWrapper>{errorMsg}</ErrorWrapper>\r\n        } else {\r\n            return(\r\n                <>\r\n                    <TitleControls \r\n                        decreaseCounter={decreaseCounter}\r\n                        increaseCounter={increaseCounter}\r\n                        name={forecastArr[index].name}\r\n                    />\r\n                    <WeatherDescription description={forecastArr[index].weather[0].description}/>\r\n                    <div className={styles.ForecastContainerContent}>\r\n                        <div className={styles.ForecastContainerContentToggler}>\r\n                            <Toggler \r\n                                options={['General', 'Details']}\r\n                                click={setView}\r\n                                currentValue={view}\r\n                            />\r\n                        </div>\r\n                        {renderContent()}\r\n                    </div>  \r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.ForecastContainer}>\r\n            {renderCard()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForecastContainer;","import React, {useRef} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport styles from './Main.module.scss';\r\nimport SearchBar from '../../components/SearchBar/SearchBar';\r\nimport ForecastContainer from '../../components/ForecastContainer/ForecastContainer';\r\n\r\nconst Main = ({forecastArr, latestForecast, errorMsg}) => {\r\n    const mainContainer = useRef({});\r\n    const shouldAnimate = () => errorMsg || latestForecast.name;\r\n    return (\r\n        <div className={styles.Main} ref={mainContainer}>\r\n            <SearchBar/>\r\n            {shouldAnimate() && \r\n            <ForecastContainer \r\n                forecastArr={forecastArr} \r\n                latestForecast={latestForecast} \r\n                mainContainer={mainContainer}\r\n                errorMsg={errorMsg}\r\n            />}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({historyForecats, latestForecast, errorMsg}) => {\r\n    return {\r\n        forecastArr: historyForecats,\r\n        latestForecast,\r\n        errorMsg\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);","import React from 'react';\n\nimport Main from '../Main/Main';\nimport styles from './App.module.scss';\n\n\nconst App = () =>  (\n\t<div className={styles.App}>\n\t\t<Main />\n\t</div>\n);\n\nexport default App;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    error: false,\r\n    errorMsg: '',\r\n    isLoading: false,\r\n    isTouched: false,\r\n    city: '',\r\n    latestForecast: {},\r\n    historyForecats: []\r\n}\r\n\r\nexport default (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.SEARCH_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                error: false,\r\n                city: action.city\r\n            }\r\n        case actionTypes.SEARCH_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: true,\r\n                errorMsg: action.errorMsg,\r\n                currentForecast: {},\r\n                isTouched: true\r\n            }\r\n        case actionTypes.SEARCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isTouched: true,\r\n                latestForecast: action.forecast,\r\n                historyForecats: [action.forecast, ...state.historyForecats],\r\n                error: false,\r\n                errorMsg: ''\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n    \r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './containers/App/App';\nimport reducer from './store/reducers/forecastReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}